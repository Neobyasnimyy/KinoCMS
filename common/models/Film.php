<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "film".
 *
 * @property integer $id
 * @property string $film_name
 * @property string $film_data
 * @property string $film_description
 * @property string $film_url_trailer
 * @property integer $film_image_name
 * @property boolean $film_is_2d
 * @property boolean $film_is_3d
 * @property boolean $film_is_imax
 * @property string $film_seo_url
 * @property string $film_seo_title
 * @property string $film_seo_keywords
 * @property string $film_seo_description
 */
class Film extends \yii\db\ActiveRecord
{
    public $del_img = false;
    public $image;

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'film';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['film_name', 'film_data'], 'required'],
            [['film_description', 'film_seo_description'], 'string'],
            [['film_name', 'film_url_trailer', 'film_image_name',
                'film_seo_url', 'film_seo_title', 'film_seo_keywords'],
                'string', 'max' => 255
            ],
            [['film_data'], 'date', 'format' => 'yyyy-mm-dd'],
            [['del_img', 'film_is_2d', 'film_is_3d', 'film_is_imax'], 'boolean'],
            [['image'],
                'file',
                'extensions' => 'png, jpg, gif, bmp',
//                'skipOnEmpty' => false, // обязательная загрузка файла
            'maxSize' => 1024 * 1024 * 3,
            'tooBig' => "Файл «{file}» слишком большой. Размер не должен превышать 3 MB.",
            'mimeTypes' => ['image/gif', 'image/jpeg', 'image/png']
        ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'film_name' => 'Название фильма',
            'film_description' => 'Описание',
            'film_data' => 'Начало проката',
            'film_image_name' => 'Главная картинка',
            'film_url_trailer' => 'Ссылка на трейлер',
            'film_is_2d' => '2D',
            'film_is_3d' => '3D',
            'film_is_imax' => 'IMAX',
            'film_seo_url' => 'Url',
            'film_seo_title' => 'Title',
            'film_seo_keywords' => 'Keywords',
            'film_seo_description' => 'Description',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getImages()
    {
        return $this->hasMany(FilmImages::className(), ['parent_id' => 'id']);
    }

    public function beforeDelete()
    {
        $path = Yii::getAlias('@upImages') . "/film/{$this->id}";
        if (file_exists($path)) {
            Yii::$app->mycomponent->myDeleteFile($path);
        }
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function deleteImage()
    {
        $path = Yii::getAlias('@upImages') . "/film/{$this->id}/" . $this->film_image_name;
        if (!empty($this->film_image_name) and (is_file($path))) {
            Yii::$app->mycomponent->myDeleteFile($path);
        }
        $this->film_image_name = null;
    }

    public function beforeSave($insert)
    {
        if ($this->del_img) {
            $this->deleteImage();
        }
        if ($this->image != null) {
            $this->uploadImage();
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    // после сохранения модели переносим картинку в папку модели
    public function afterSave($insert, $changedAttributes)
    {
        $dir = Yii::getAlias('@upImages') . "/film/{$this->id}";

        if (!file_exists($dir)) {
            mkdir($dir, 0775, true);
        }

        $old_name = Yii::getAlias('@upImages') . "/temp/{$this->film_image_name}";
        $new_name = $dir . '/' . $this->film_image_name;
        if (isset($this->image) && file_exists($old_name)) {
            rename($old_name, $new_name);
        }

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    // загружаем картинку во временную директорию
    public function uploadImage()
    {
        if ($this->validate()) {
            if (isset($this->film_image_name)) {
                $this->deleteImage();
            }
            if (!file_exists(Yii::getAlias(
                    '@upImages') . "/temp")
            ) {
                mkdir(Yii::getAlias('@upImages') . "/temp", 0775, true);
            }
            $this->image->name = rand(0, 9999) . "-" . date('YmdHi', time()) . '.' . $this->image->extension;
            $this->film_image_name = $this->image->name;
            $this->image->saveAs(Yii::getAlias('@upImages')
                . "/temp/{$this->image->name}");
            return true;
        } else {
            return false;
        }
    }
}
